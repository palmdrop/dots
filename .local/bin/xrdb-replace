#!/bin/bash

# Based on this comment: https://www.reddit.com/r/unixporn/comments/8giij5/guide_defining_program_colors_through_xresources/e1acuo0?utm_source=share&utm_medium=web2x&context=3

# Use config file containing a list of files and xrdb prefixes to use
if [ "$1" = "-c" ]; then
    config_path=$2

    # If passed config path is empty, try default location
    [ -z "$config_path" ] && config_path="$XDG_CONFIG_HOME/xrdb-reload.config"

    # If no valid config file path is passed, exit
    [ -f "$config_path" ] || {
        # But first try default location
        echo "Config file $2 does not exist."
        exit 1
    }

    # Iterate over all lines in the config file
    while IFS= read -r line
    do
        # Extract path to file and prefix to use
        read path file prefix <<< "$line"

        # Expand possible variables used
        path=$(eval "echo $path")

        # Replace...
        xrdb-replace $path/$file $prefix

        # Check if a reload script exist! Many applications
        # require restart to use new config file. If script exists,
        # run it.
        reload_path="$path/reload.sh"
        if [ -f "$reload_path" ]; then
            . $reload_path
        fi
    done < "$config_path"

    exit 0
fi

# Target file
target_file="$1"

# Prefix used in Xresources (e.g, Urxvt, dunst, *, etc)
prefix="$2"

# Abort script
abort() {
    [ -f "$target_file.tmp" ] && rm $target_file.tmp
    echo "$1"
    exit 1
}

# Abort if there's no template file
[ -f "$target_file.in" ] || abort "No template file."

# Create temporary file
cp $target_file.in $target_file.tmp

# Get variables 
vars=( $(grep -oh "\w*%$prefix.*%\w*" $target_file.tmp) )
# Remove duplicates
vars=( $(printf "%s\n" "${vars[@]}" | sort -u) )

# Iterate over all variables
for v in ${vars[@]}
do
    # Remove "%" at beginning and end
    arg=${v:1:-1}

    # Abort if argument is empty for whatever reason
    [ -z $arg ] && abort "Invalid template."

    # Fetch value using xrdb
    value=$(xrdbvar "$arg")

    # If value is empty, try replacing the prefix with "*"
    [ -z $value ] && {
        arg="*${arg#$prefix}"
        value=$(xrdbvar "$arg")
    }

    # If value is still empty, abort
    [ -z $value ] && abort "No color matching \"$arg\""

    # Replace the placeholder with the acquired value
    if [ "$3" = "--quote" ]; then
        eval "sed -i 's/$v/\"${value}\"/g' $target_file.tmp";
    else
        eval "sed -i 's/$v/${value}/g' $target_file.tmp";
    fi
done

# Finally, replace target file with our updated one
[ -f $target_file ] && rm $target_file
mv $target_file.tmp $target_file
