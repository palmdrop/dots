#!/bin/bash

# Method for limiting an integer value to a specific range
limit() {
    if (( $1 < $2 )); then
        v="$2"
    elif (( $1 > $3 )); then
        v="$3"
    else
        v="$1"
    fi
    echo "$v"
}

# Get screen padding (assume equal padding all around the screen)
padding=$1

# Get window position and dimensions
unset x y w h
eval $(xwininfo -id $(xdotool getactivewindow) |
sed -n -e "s/^ \+Absolute upper-left X: \+\([0-9]\+\).*/x=\1/p" \
        -e "s/^ \+Absolute upper-left Y: \+\([0-9]\+\).*/y=\1/p" \
        -e "s/^ \+Width: \+\([0-9]\+\).*/w=\1/p" \
        -e "s/^ \+Height: \+\([0-9]\+\).*/h=\1/p" )

# Get screen dimensions
sw=$(xwininfo -root|sed '/Width/!d;s/.* //')
sh=$(xwininfo -root|sed '/Height/!d;s/.* //')

# Calculate maximum width and height
maxw=$(($sw - $padding*2))
maxh=$(($sh - $padding*2))

# Function for moving a window
move() {
    # If the limit flag is passed, the move will be restricted such that
    # none of the window is outside the screen (taking padding into account)
    if [ "$3" = "--limit" ]; then
        mx=$(( $sw - $padding - $4 ))   
        my=$(( $sh - $padding - $5 ))   
    else
        mx=$maxw
        my=$maxh
    fi

    # Limit input values to screen space, to make sure entire
    # window never is outside the scren
    #x=$(limit $1 $padding $mx)
    #y=$(limit $2 $padding $my)
    x=$1
    y=$2

    # Move the window
    xdotool getactivewindow windowmove "$x" "$y"
}

# Function for resizing a window
resize() {
    xdotool getactivewindow windowsize "$1" "$2"
}


# Perform action
case $2 in
    # Move the window to the center of the screen
    center)   
        nx=$(( $sw/2 - $w/2 ))
        ny=$(( $sh/2 - $h/2 ))
        move "$nx" "$ny"
    ;;
    # Move the window to the left screen edge
    left)
        nx=$padding
        ny=$(( $sh/2 - $h/2 ))
        move "$nx" "$ny"
    ;;
    # Move the window to the right screen edge
    right)
        nx=$(( $sw - $w - $padding ))
        ny=$(( $sh/2 - $h/2 ))
        move "$nx" "$ny"
    ;;
    # Move the window to the top screen edge
    top)
        nx=$(( $sw/2 - $w/2 ))
        ny=$padding
        move "$nx" "$ny"
    ;;
    # Move the window to the bottom screen edge
    bottom)
        nx=$(( $sw/2 - $w/2 ))
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    # Move the window to the top left corner of the screen
    topleft)
        nx=$padding
        ny=$padding
        move "$nx" "$ny"
    ;;
    # Move the window to the top right corner of the screen
    topright)
        nx=$(( $sw - $w - $padding ))
        ny=$padding
        move "$nx" "$ny"
    ;;
    # Move the window to the bottom left corner of the screen
    bottomleft)
        nx=$padding
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    # Move the window to the bottom right corner of the screen
    bottomright)
        nx=$(( $sw - $w - $padding ))
        ny=$(( $sh - $h - $padding ))
        move "$nx" "$ny"
    ;;
    # Multiply the width of the window by some weight
    multwidth)
        # Calculate the desired widht of the window
        desiredw=$(printf "%.0f" $(echo "$w * $3" | bc))

        # Limit the width to make sure it's never wider than the screen 
        # (taking padding into account)
        nw=$(limit $desiredw $padding $maxw)
        nh=$h

        # Resize the window
        resize "$nw" "$nh"

        # If the center flag is passed, then keep the center of the window
        # in the same position
        if [ "$4" == "center" ]; then
            nx=$(echo "$x - ($w * $3 - $w) / 2" | bc)
            ny=$y

            # Move the window and limit it to not exceed screen dimensions
            move "$nx" "$ny" --limit "$nw" "$nh"
        fi

    ;;
    # Multiply the height of the window by some weight
    multheight)
        desiredh=$(printf "%.0f" $(echo "$h * $3" | bc))

        nw=$w
        nh=$(limit $desiredh $padding $maxh)

        resize "$nw" "$nh"
        if [ "$4" == "center" ]; then
            nx=$x
            ny=$(echo "$y - ($h * $3 - $h) / 2" | bc)

            move "$nx" "$ny" --limit "$nw" "$nh"
        fi
    ;;
    # Move the window 
    move)
        nx=$(echo "$x $3" | bc)
        ny=$(echo "$y $4" | bc)

        #echo $x
        #echo $y

        #echo $nx
        #echo $ny

        # Move the window, and limit it to make sure it doesn't exit the screen
        move "$nx" "$ny" --limit "$w" "$h"
        #xdotool getactivewindow windowmove "$nx" "$ny"
    ;;
    *)
        echo "$1 is not an option."
    ;;
esac
